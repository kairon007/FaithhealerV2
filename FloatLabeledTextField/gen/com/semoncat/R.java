/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.semoncat;

public final class R {
    public static final class attr {
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int fletFloatingHint=0x7f010000;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static int fletHintTextColor=0x7f010006;
        /**  Supply a value for
{@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
used when an input method is connected to the text view. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int fletImeActionId=0x7f010009;
        /**  Supply a value for
{@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
used when an input method is connected to the text view. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int fletImeActionLabel=0x7f010008;
        /**  Additional features you can enable in an IME associated with an editor
to improve the integration with your application. The constants
here correspond to those defined by
{@link android.view.inputmethod.EditorInfo#imeOptions}. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td> There is no specific action associated with this editor, let the
editor come up with its own if it can.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_NULL}. </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td> This editor has no action associated with it.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td> The action key performs a "go"
operation to take the user to the target of the text they typed.
Typically used, for example, when entering a URL.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td> The action key performs a "search"
operation, taking the user to the results of searching for the text
the have typed (in whatever context is appropriate).
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td> The action key performs a "send"
operation, delivering the text to its target. This is typically used
when composing a message.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td> The action key performs a "next"
operation, taking the user to the next field that will accept text.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td> The action key performs a "done"
operation, closing the soft input method.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. </td></tr>
<tr><td><code>actionPrevious</code></td><td>0x00000007</td><td> The action key performs a "previous"
operation, taking the user to the previous field that will accept text.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_PREVIOUS}. </td></tr>
<tr><td><code>flagNoFullscreen</code></td><td>0x2000000</td><td> Used to request that the IME never go
into fullscreen mode. Applications need to be aware that the flag is not
a guarantee, and not all IMEs will respect it.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigatePrevious</code></td><td>0x4000000</td><td> Like flagNavigateNext, but
specifies there is something interesting that a backward navigation
can focus on. If the user selects the IME's facility to backward
navigate, this will show up in the application as an actionPrevious
at {@link android.view.inputmethod.InputConnection#performEditorAction(int)
InputConnection.performEditorAction(int)}.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigateNext</code></td><td>0x8000000</td><td> Used to specify that there is something
interesting that a forward navigation can focus on. This is like using
actionNext, except allows the IME to be multiline (with
an enter key) as well as provide forward navigation. Note that some
IMEs may not be able to do this, especially when running on a small
screen where there is little space. In that case it does not need to
present a UI for this option. Like actionNext, if the
user selects the IME's facility to forward navigate, this will show up
in the application at
{@link android.view.inputmethod.InputConnection#performEditorAction(int)
InputConnection.performEditorAction(int)}.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_NEXT}. </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td> Used to specify that the IME does not need
to show its extracted text UI. For input methods that may be fullscreen,
often when in landscape mode, this allows them to be smaller and let part
of the application be shown behind. Though there will likely be limited
access to the application available from the user, it can make the
experience of a (mostly) fullscreen IME less jarring. Note that when
this flag is specified the IME may <em>not</em> be set up to be able
to display text, so it should only be used in situations where this is
not needed.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td> Used in conjunction with a custom action, this indicates that the
action should not be available as an accessory button when the
input method is full-screen.
Note that by setting this flag, there can be cases where the action
is simply never available to the user. Setting this generally means
that you think showing text being edited is more important than the
action you have supplied.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td> Used in conjunction with a custom action,
this indicates that the action should not be available in-line as
a replacement for the "enter" key. Typically this is
because the action has such a significant impact or is not recoverable
enough that accidentally hitting it should be avoided, such as sending
a message. Note that {@link android.widget.TextView} will
automatically set this flag for you on multi-line text views.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. </td></tr>
<tr><td><code>flagForceAscii</code></td><td>0x80000000</td><td> Used to request that the IME should be capable of inputting ASCII
characters. The intention of this flag is to ensure that the user
can type Roman alphabet characters in a {@link android.widget.TextView}
used for, typically, account ID or password input. It is expected that IMEs
normally are able to input ASCII even without being told so (such IMEs
already respect this flag in a sense), but there could be some cases they
aren't when, for instance, only non-ASCII input languagaes like Arabic,
Greek, Hebrew, Russian are enabled in the IME. Applications need to be
aware that the flag is not a guarantee, and not all IMEs will respect it.
However, it is strongly recommended for IME authors to respect this flag
especially when their IME could end up with a state that has only non-ASCII
input languages enabled.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_FORCE_ASCII}. </td></tr>
</table>
         */
        public static int fletImeOptions=0x7f01000b;
        /**  This is taken straight out of AOSP to help propogate down 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type. The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
request capitalization of all characters. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
request capitalization of the first character of every word. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
request capitalization of the first character of every sentence. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
request auto-correction of text being input. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
specify that this field will be doing its own auto-completion and
talking with the input method appropriately. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
allow multiple lines of text in the field. If this flag is not set,
the text field will be constrained to a single line. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
indicate that though the regular text view should not be multiple
lines, the IME should provide multiple lines if it can. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
indicate that the IME should not show any
dictionary-based word suggestions. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
field in a contact entry. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>textWebEmailAddress</code></td><td>0x000000d1</td><td> Text that will be used as an e-mail address on a web form. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textWebPassword</code></td><td>0x000000e1</td><td> Text that will be used as a password on a web form. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field. Corresponds to
{@link android.text.InputType#TYPE_CLASS_NUMBER} |
{@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
allow a signed number. Corresponds to
{@link android.text.InputType#TYPE_CLASS_NUMBER} |
{@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
allow a decimal (fractional) number. Corresponds to
{@link android.text.InputType#TYPE_CLASS_NUMBER} |
{@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>numberPassword</code></td><td>0x00000012</td><td> A numeric password field. Corresponds to
{@link android.text.InputType#TYPE_CLASS_NUMBER} |
{@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number. Corresponds to
{@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time. Corresponds to
{@link android.text.InputType#TYPE_CLASS_DATETIME} |
{@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date. Corresponds to
{@link android.text.InputType#TYPE_CLASS_DATETIME} |
{@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time. Corresponds to
{@link android.text.InputType#TYPE_CLASS_DATETIME} |
{@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
         */
        public static int fletInputType=0x7f01000a;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int fletPassword=0x7f010002;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int fletSingleLine=0x7f010001;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int fletTextBackground=0x7f010003;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static int fletTextColor=0x7f010007;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td></td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td></td></tr>
<tr><td><code>left</code></td><td>0x03</td><td></td></tr>
<tr><td><code>right</code></td><td>0x05</td><td></td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td></td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td></td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td></td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td></td></tr>
<tr><td><code>center</code></td><td>0x11</td><td></td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td></td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td></td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td></td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td></td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td></td></tr>
</table>
         */
        public static int fletTextGravity=0x7f010004;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int fletTextLines=0x7f010005;
    }
    public static final class dimen {
        public static int flet_hint_text_padding_horizontal=0x7f040001;
        public static int flet_hint_text_size=0x7f040000;
    }
    public static final class id {
        public static int FloatLabeledEditTextEditText=0x7f03003f;
        public static int FloatLabeledEditTextHint=0x7f03003e;
        public static int actionDone=0x7f030035;
        public static int actionGo=0x7f030031;
        public static int actionNext=0x7f030034;
        public static int actionNone=0x7f030030;
        public static int actionPrevious=0x7f030036;
        public static int actionSearch=0x7f030032;
        public static int actionSend=0x7f030033;
        public static int actionUnspecified=0x7f03002f;
        public static int bottom=0x7f030001;
        public static int center=0x7f030008;
        public static int center_horizontal=0x7f030006;
        public static int center_vertical=0x7f030004;
        public static int clip_horizontal=0x7f03000b;
        public static int clip_vertical=0x7f03000a;
        public static int date=0x7f03002c;
        public static int datetime=0x7f03002b;
        public static int end=0x7f03000d;
        public static int fill=0x7f030009;
        public static int fill_horizontal=0x7f030007;
        public static int fill_vertical=0x7f030005;
        public static int flagForceAscii=0x7f03003d;
        public static int flagNavigateNext=0x7f030039;
        public static int flagNavigatePrevious=0x7f030038;
        public static int flagNoAccessoryAction=0x7f03003b;
        public static int flagNoEnterAction=0x7f03003c;
        public static int flagNoExtractUi=0x7f03003a;
        public static int flagNoFullscreen=0x7f030037;
        public static int left=0x7f030002;
        public static int none=0x7f03000e;
        public static int normal=0x7f03002e;
        public static int number=0x7f030026;
        public static int numberDecimal=0x7f030028;
        public static int numberPassword=0x7f030029;
        public static int numberSigned=0x7f030027;
        public static int phone=0x7f03002a;
        public static int right=0x7f030003;
        public static int start=0x7f03000c;
        public static int text=0x7f03000f;
        public static int textAutoComplete=0x7f030014;
        public static int textAutoCorrect=0x7f030013;
        public static int textCapCharacters=0x7f030010;
        public static int textCapSentences=0x7f030012;
        public static int textCapWords=0x7f030011;
        public static int textEmailAddress=0x7f030019;
        public static int textEmailSubject=0x7f03001a;
        public static int textFilter=0x7f030022;
        public static int textImeMultiLine=0x7f030016;
        public static int textLongMessage=0x7f03001c;
        public static int textMultiLine=0x7f030015;
        public static int textNoSuggestions=0x7f030017;
        public static int textPassword=0x7f03001f;
        public static int textPersonName=0x7f03001d;
        public static int textPhonetic=0x7f030023;
        public static int textPostalAddress=0x7f03001e;
        public static int textShortMessage=0x7f03001b;
        public static int textUri=0x7f030018;
        public static int textVisiblePassword=0x7f030020;
        public static int textWebEditText=0x7f030021;
        public static int textWebEmailAddress=0x7f030024;
        public static int textWebPassword=0x7f030025;
        public static int time=0x7f03002d;
        public static int top=0x7f030000;
    }
    public static final class layout {
        public static int widget_float_labeled_edit_text=0x7f020000;
    }
    public static final class styleable {
        /** Attributes that can be used with a FloatLabeledEditText.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletFloatingHint com.semoncat:fletFloatingHint}</code></td><td></td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletHintTextColor com.semoncat:fletHintTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletImeActionId com.semoncat:fletImeActionId}</code></td><td> Supply a value for
{@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
used when an input method is connected to the text view.</td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletImeActionLabel com.semoncat:fletImeActionLabel}</code></td><td> Supply a value for
{@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
used when an input method is connected to the text view.</td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletImeOptions com.semoncat:fletImeOptions}</code></td><td> Additional features you can enable in an IME associated with an editor
to improve the integration with your application.</td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletInputType com.semoncat:fletInputType}</code></td><td> This is taken straight out of AOSP to help propogate down </td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletPassword com.semoncat:fletPassword}</code></td><td></td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletSingleLine com.semoncat:fletSingleLine}</code></td><td></td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletTextBackground com.semoncat:fletTextBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletTextColor com.semoncat:fletTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletTextGravity com.semoncat:fletTextGravity}</code></td><td></td></tr>
           <tr><td><code>{@link #FloatLabeledEditText_fletTextLines com.semoncat:fletTextLines}</code></td><td></td></tr>
           </table>
           @see #FloatLabeledEditText_fletFloatingHint
           @see #FloatLabeledEditText_fletHintTextColor
           @see #FloatLabeledEditText_fletImeActionId
           @see #FloatLabeledEditText_fletImeActionLabel
           @see #FloatLabeledEditText_fletImeOptions
           @see #FloatLabeledEditText_fletInputType
           @see #FloatLabeledEditText_fletPassword
           @see #FloatLabeledEditText_fletSingleLine
           @see #FloatLabeledEditText_fletTextBackground
           @see #FloatLabeledEditText_fletTextColor
           @see #FloatLabeledEditText_fletTextGravity
           @see #FloatLabeledEditText_fletTextLines
         */
        public static final int[] FloatLabeledEditText = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b
        };
        /**
          <p>This symbol is the offset where the {@link com.semoncat.R.attr#fletFloatingHint}
          attribute's value can be found in the {@link #FloatLabeledEditText} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.semoncat:fletFloatingHint
        */
        public static final int FloatLabeledEditText_fletFloatingHint = 0;
        /**
          <p>This symbol is the offset where the {@link com.semoncat.R.attr#fletHintTextColor}
          attribute's value can be found in the {@link #FloatLabeledEditText} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name com.semoncat:fletHintTextColor
        */
        public static final int FloatLabeledEditText_fletHintTextColor = 6;
        /**
          <p>
          @attr description
           Supply a value for
{@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
used when an input method is connected to the text view. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.semoncat:fletImeActionId
        */
        public static final int FloatLabeledEditText_fletImeActionId = 9;
        /**
          <p>
          @attr description
           Supply a value for
{@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
used when an input method is connected to the text view. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.semoncat:fletImeActionLabel
        */
        public static final int FloatLabeledEditText_fletImeActionLabel = 8;
        /**
          <p>
          @attr description
           Additional features you can enable in an IME associated with an editor
to improve the integration with your application. The constants
here correspond to those defined by
{@link android.view.inputmethod.EditorInfo#imeOptions}. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td> There is no specific action associated with this editor, let the
editor come up with its own if it can.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_NULL}. </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td> This editor has no action associated with it.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td> The action key performs a "go"
operation to take the user to the target of the text they typed.
Typically used, for example, when entering a URL.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td> The action key performs a "search"
operation, taking the user to the results of searching for the text
the have typed (in whatever context is appropriate).
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td> The action key performs a "send"
operation, delivering the text to its target. This is typically used
when composing a message.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td> The action key performs a "next"
operation, taking the user to the next field that will accept text.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td> The action key performs a "done"
operation, closing the soft input method.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. </td></tr>
<tr><td><code>actionPrevious</code></td><td>0x00000007</td><td> The action key performs a "previous"
operation, taking the user to the previous field that will accept text.
Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_ACTION_PREVIOUS}. </td></tr>
<tr><td><code>flagNoFullscreen</code></td><td>0x2000000</td><td> Used to request that the IME never go
into fullscreen mode. Applications need to be aware that the flag is not
a guarantee, and not all IMEs will respect it.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigatePrevious</code></td><td>0x4000000</td><td> Like flagNavigateNext, but
specifies there is something interesting that a backward navigation
can focus on. If the user selects the IME's facility to backward
navigate, this will show up in the application as an actionPrevious
at {@link android.view.inputmethod.InputConnection#performEditorAction(int)
InputConnection.performEditorAction(int)}.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigateNext</code></td><td>0x8000000</td><td> Used to specify that there is something
interesting that a forward navigation can focus on. This is like using
actionNext, except allows the IME to be multiline (with
an enter key) as well as provide forward navigation. Note that some
IMEs may not be able to do this, especially when running on a small
screen where there is little space. In that case it does not need to
present a UI for this option. Like actionNext, if the
user selects the IME's facility to forward navigate, this will show up
in the application at
{@link android.view.inputmethod.InputConnection#performEditorAction(int)
InputConnection.performEditorAction(int)}.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_NEXT}. </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td> Used to specify that the IME does not need
to show its extracted text UI. For input methods that may be fullscreen,
often when in landscape mode, this allows them to be smaller and let part
of the application be shown behind. Though there will likely be limited
access to the application available from the user, it can make the
experience of a (mostly) fullscreen IME less jarring. Note that when
this flag is specified the IME may <em>not</em> be set up to be able
to display text, so it should only be used in situations where this is
not needed.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td> Used in conjunction with a custom action, this indicates that the
action should not be available as an accessory button when the
input method is full-screen.
Note that by setting this flag, there can be cases where the action
is simply never available to the user. Setting this generally means
that you think showing text being edited is more important than the
action you have supplied.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td> Used in conjunction with a custom action,
this indicates that the action should not be available in-line as
a replacement for the "enter" key. Typically this is
because the action has such a significant impact or is not recoverable
enough that accidentally hitting it should be avoided, such as sending
a message. Note that {@link android.widget.TextView} will
automatically set this flag for you on multi-line text views.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. </td></tr>
<tr><td><code>flagForceAscii</code></td><td>0x80000000</td><td> Used to request that the IME should be capable of inputting ASCII
characters. The intention of this flag is to ensure that the user
can type Roman alphabet characters in a {@link android.widget.TextView}
used for, typically, account ID or password input. It is expected that IMEs
normally are able to input ASCII even without being told so (such IMEs
already respect this flag in a sense), but there could be some cases they
aren't when, for instance, only non-ASCII input languagaes like Arabic,
Greek, Hebrew, Russian are enabled in the IME. Applications need to be
aware that the flag is not a guarantee, and not all IMEs will respect it.
However, it is strongly recommended for IME authors to respect this flag
especially when their IME could end up with a state that has only non-ASCII
input languages enabled.
<p>Corresponds to
{@link android.view.inputmethod.EditorInfo#IME_FLAG_FORCE_ASCII}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.semoncat:fletImeOptions
        */
        public static final int FloatLabeledEditText_fletImeOptions = 11;
        /**
          <p>
          @attr description
           This is taken straight out of AOSP to help propogate down 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type. The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
request capitalization of all characters. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
request capitalization of the first character of every word. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
request capitalization of the first character of every sentence. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
request auto-correction of text being input. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
specify that this field will be doing its own auto-completion and
talking with the input method appropriately. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
allow multiple lines of text in the field. If this flag is not set,
the text field will be constrained to a single line. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
indicate that though the regular text view should not be multiple
lines, the IME should provide multiple lines if it can. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
indicate that the IME should not show any
dictionary-based word suggestions. Corresponds to
{@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
field in a contact entry. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>textWebEmailAddress</code></td><td>0x000000d1</td><td> Text that will be used as an e-mail address on a web form. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textWebPassword</code></td><td>0x000000e1</td><td> Text that will be used as a password on a web form. Corresponds to
{@link android.text.InputType#TYPE_CLASS_TEXT} |
{@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field. Corresponds to
{@link android.text.InputType#TYPE_CLASS_NUMBER} |
{@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
allow a signed number. Corresponds to
{@link android.text.InputType#TYPE_CLASS_NUMBER} |
{@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
allow a decimal (fractional) number. Corresponds to
{@link android.text.InputType#TYPE_CLASS_NUMBER} |
{@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>numberPassword</code></td><td>0x00000012</td><td> A numeric password field. Corresponds to
{@link android.text.InputType#TYPE_CLASS_NUMBER} |
{@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number. Corresponds to
{@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time. Corresponds to
{@link android.text.InputType#TYPE_CLASS_DATETIME} |
{@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date. Corresponds to
{@link android.text.InputType#TYPE_CLASS_DATETIME} |
{@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time. Corresponds to
{@link android.text.InputType#TYPE_CLASS_DATETIME} |
{@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.semoncat:fletInputType
        */
        public static final int FloatLabeledEditText_fletInputType = 10;
        /**
          <p>This symbol is the offset where the {@link com.semoncat.R.attr#fletPassword}
          attribute's value can be found in the {@link #FloatLabeledEditText} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.semoncat:fletPassword
        */
        public static final int FloatLabeledEditText_fletPassword = 2;
        /**
          <p>This symbol is the offset where the {@link com.semoncat.R.attr#fletSingleLine}
          attribute's value can be found in the {@link #FloatLabeledEditText} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.semoncat:fletSingleLine
        */
        public static final int FloatLabeledEditText_fletSingleLine = 1;
        /**
          <p>This symbol is the offset where the {@link com.semoncat.R.attr#fletTextBackground}
          attribute's value can be found in the {@link #FloatLabeledEditText} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.semoncat:fletTextBackground
        */
        public static final int FloatLabeledEditText_fletTextBackground = 3;
        /**
          <p>This symbol is the offset where the {@link com.semoncat.R.attr#fletTextColor}
          attribute's value can be found in the {@link #FloatLabeledEditText} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name com.semoncat:fletTextColor
        */
        public static final int FloatLabeledEditText_fletTextColor = 7;
        /**
          <p>This symbol is the offset where the {@link com.semoncat.R.attr#fletTextGravity}
          attribute's value can be found in the {@link #FloatLabeledEditText} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td></td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td></td></tr>
<tr><td><code>left</code></td><td>0x03</td><td></td></tr>
<tr><td><code>right</code></td><td>0x05</td><td></td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td></td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td></td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td></td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td></td></tr>
<tr><td><code>center</code></td><td>0x11</td><td></td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td></td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td></td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td></td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td></td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td></td></tr>
</table>
          @attr name com.semoncat:fletTextGravity
        */
        public static final int FloatLabeledEditText_fletTextGravity = 4;
        /**
          <p>This symbol is the offset where the {@link com.semoncat.R.attr#fletTextLines}
          attribute's value can be found in the {@link #FloatLabeledEditText} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.semoncat:fletTextLines
        */
        public static final int FloatLabeledEditText_fletTextLines = 5;
    };
}
